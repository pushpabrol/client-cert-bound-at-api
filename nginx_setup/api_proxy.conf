upstream nodeexpressapi {
    # Nodejs app upstream
    server 127.0.0.1:8000;
    keepalive 64;
}

server {
    listen 443 ssl; # Enable SSL on port 443
    server_name api.yourserver.com;

    # Server-side SSL/TLS certificate and key
    ssl_certificate /etc/letsencrypt/live/api.yourserver.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.yourserver.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Client-side SSL/TLS certificate settings
    ssl_client_certificate /etc/nginx/client_certs/secureaccess.crt; # Self-signed or trusted CA certs
    ssl_verify_client optional_no_ca; # optional_no_ca parameter requests the client certificate but does not require it to be signed by a trusted CA certificate. This is for a service that is external to nginx performs the actual certificate verification.

    location /mtls {
        # Pass the client certificate to the backend even if not verified
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_max_temp_file_size 0;
        proxy_pass http://nodeexpressapi/mtls;
        proxy_redirect off;
        proxy_read_timeout 240s;

        # Pass SSL client certificate details to the backend
        proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
        proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
        proxy_set_header X-SSL-Client-I-Dn $ssl_client_i_dn;
        proxy_set_header X-SSL-Client-S-Dn $ssl_client_s_dn;
        proxy_set_header X-SSL-Client-Serial $ssl_client_serial;
        proxy_set_header X-SSL-Client-V-Start $ssl_client_v_start;
        proxy_set_header X-SSL-Client-V-End $ssl_client_v_end;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
        proxy_set_header X-SSL-Protocol $ssl_protocol;
        proxy_set_header X-SSL-Server-Name $ssl_server_name;
    }

    location / {
        # Default proxy_pass configuration for all other requests
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_max_temp_file_size 0;
        proxy_pass http://nodeexpressapi/;
        proxy_redirect off;
        proxy_read_timeout 240s;

        # Pass SSL details to the backend
        proxy_set_header X-SSL-Protocol $ssl_protocol;
        proxy_set_header X-SSL-Server-Name $ssl_server_name;
    }
}

# Redirect HTTP requests to HTTPS
server {
    if ($host = api.yourserver.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name api.yourserver.com;
    listen 80;
    return 404; # managed by Certbot
}
